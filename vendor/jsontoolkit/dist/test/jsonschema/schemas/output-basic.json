{
    "$schema": "https://json-schema.org/draft/2019-09/schema",
    "$id": "https://www.jviotti.com/jsontoolkit/output/basic",
    "description": "A schema that strictly validates the basic mode output structure",
    "type": "object",
    "required": ["valid", "errors"],
    "properties": {
        "valid": {
            "type": "boolean"
        },
        "errors": {
            "type": "array"
        }
    },
    "additionalProperties": false,
    "if": {
        "properties": {
            "valid": {
                "type": "boolean",
                "const": true
            }
        }
    },
    "then": {
        "properties": {
            "errors": {
                "type": "array",
                "minItems": 0,
                "maxItems": 0
            }
        }
    },
    "else": {
        "properties": {
            "errors": {
                "type": "array",
                "uniqueItems": true,
                "minItems": 1,
                "items": {
                    "type": "object",
                    "required": ["error", "keywordLocation", "instanceLocation"],
                    "additionalProperties": false,
                    "properties": {
                        "error": {
                            "type": "string",
                            "pattern": "^\\S[\\s\\S]*\\S$"
                        },
                        "keywordLocation": {
                            "type": "string",
                            "format": "uri-reference"
                        },
                        "instanceLocation": {
                            "type": "string",
                            "format": "uri-reference"
                        },
                        "absoluteKeywordLocation": {
                            "type": "string",
                            "format": "uri"
                        }
                    },
                    "dependentSchemas": {
                        "absoluteKeywordLocation": {
                            "type": "object",
                            "properties": {
                                "keywordLocation": {
                                    "type": "string",
                                    "$comment": "The absoluteKeywordLocation property should only be present of keywordLocation has a reference applicator",
                                    "pattern": "\\/\\$ref|\\$ref\\/|\\/\\$recursiveRef|\\$recursiveRef\\/"
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
